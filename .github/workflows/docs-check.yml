name: "Docs check"
# https://github.com/marketplace/actions/sphinx-build

on:
- pull_request

jobs:
  check-docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ammaraskar/sphinx-action@master
      with:
        # git is required to clone the docs theme
        # before custom requirement are resolved https://github.com/ammaraskar/sphinx-action/issues/16
        pre-build-command: "apt-get update -y && apt-get install -y git && pip install -r requirements/docs.txt"
        docs-folder: "docs/"
        repo-token: "${{ secrets.GITHUB_TOKEN }}"

  setup-docs: &setup-ci-steps
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      # Note: This uses an internal pip API and may not always work
      # https://github.com/actions/cache/blob/master/examples.md#multiple-oss-in-a-workflow
      - name: Get pip cache
        id: pip-cache
        run: |
          python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-

      - name: Install dependencies
        run: |
          # python -m pip install --upgrade --user pip
          pip install -r requirements.txt -U -f https://download.pytorch.org/whl/torch_stable.html -q
          pip install -r docs/requirements.txt
          python --version
          pip --version
          pip list
        shell: bash

  test-docs:
    runs-on: ubuntu-latest

    steps:
      - *setup-ci-steps

      - name: Test Documentation
        run: |
          # First run the same pipeline as Read-The-Docs
          apt-get update && sudo apt-get install -y cmake
          cd docs; make doctest; make coverage

  make-docs:
    runs-on: ubuntu-latest

    steps:
      - *setup-ci-steps

      - name: Make Documentation
        run: |
          # First run the same pipeline as Read-The-Docs
          apt-get update && sudo apt-get install -y cmake
          cd docs; make clean; make html --debug --jobs 2 SPHINXOPTS="-W"

      - name: Upload built docs
        uses: actions/upload-artifact@v2
        with:
          name: docs-results-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.requires }}
          path: docs/build/html/
        # Use always() to always run this step to publish test results when there are test failures
        if: success()
