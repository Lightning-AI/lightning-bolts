# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  tags:
    include:
      - '*'
  branches:
    include:
      - master
      - release/*
      - refs/tags/*
pr:
  - master
  - release/*

jobs:
  - job: pytest
    # how long to run the job before automatically cancelling
    timeoutInMinutes: 45
    # how much time to give 'run always even if cancelled tasks' before stopping them
    cancelTimeoutInMinutes: 2

    pool: gridai-spot-pool

    # ToDo: this need to have installed docker in the base image...
    #container: "pytorchlightning/pytorch_lightning:base-cuda-py$[ variables['python.version'] ]-torch1.6"
    container:
      # base ML image: mcr.microsoft.com/azureml/openmpi3.1.2-cuda10.2-cudnn8-ubuntu18.04
      image: "pytorchlightning/pytorch_lightning:base-cuda-py3.7-torch1.6"
      #endpoint: azureContainerRegistryConnection
      options: "--runtime=nvidia -e NVIDIA_VISIBLE_DEVICES=all"

    workspace:
      clean: all

    steps:

    - bash: |
        lspci | egrep 'VGA|3D'
        whereis nvidia
        nvidia-smi
        python --version
        pip --version
        pip list
      displayName: 'Image info & NVIDIA'

    - bash: |
        # python -m pip install "pip==20.1"
        pip install --requirement ./requirements/devel.txt --upgrade-strategy only-if-needed
        pip list
      displayName: 'Install dependencies'

    - bash: |
        python -m coverage run --source pl_bolts -m pytest pl_bolts tests -v --durations=30
      displayName: 'Testing: standard'

    - bash: |
        python -m coverage report
        python -m coverage xml
        codecov --token=$(CODECOV_TOKEN) --flags=gpu,pytest --name="GPU-coverage" --env=linux,azure
      displayName: 'Statistics'
