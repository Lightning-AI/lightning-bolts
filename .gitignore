<<<<<<< HEAD
# Editor files
*.vs
*.vscode
=======
# project
.DS_Store
run_configs/
model_weights/
app/models/
pip-wheel-metadata/
lightning_logs/
.vscode/

# Test-tube
test_tube_logs/
test_tube_data/
test_tube_exp/

# Documentations
docs/source/api
docs/source/*.md
docs/source/generated
>>>>>>> 90c1c0f68b4983c685e9d009482890e578800439

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
<<<<<<< HEAD
=======
timit_data/

>>>>>>> 90c1c0f68b4983c685e9d009482890e578800439

# C extensions
*.so

<<<<<<< HEAD
# Distribution / packaging
.Python
build/
=======
.idea/

# Distribution / packaging
.Python
ide_layouts/
build/
_build/
>>>>>>> 90c1c0f68b4983c685e9d009482890e578800439
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
<<<<<<< HEAD
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
=======
wheels/
*.egg-info/
.installed.cfg
*.egg
>>>>>>> 90c1c0f68b4983c685e9d009482890e578800439

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
<<<<<<< HEAD
.nox/
=======
>>>>>>> 90c1c0f68b4983c685e9d009482890e578800439
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
<<<<<<< HEAD
*.py,cover
.hypothesis/
.pytest_cache/
=======
.hypothesis/
tests/tests_tt_dir/
tests/save_dir
tests/tests/
>>>>>>> 90c1c0f68b4983c685e9d009482890e578800439

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
<<<<<<< HEAD
db.sqlite3
db.sqlite3-journal
=======
>>>>>>> 90c1c0f68b4983c685e9d009482890e578800439

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
<<<<<<< HEAD
docs/_build/
docs/source/api/
docs/source/*.md
=======
docs/build/
>>>>>>> 90c1c0f68b4983c685e9d009482890e578800439

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

<<<<<<< HEAD
# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid
=======
# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule
>>>>>>> 90c1c0f68b4983c685e9d009482890e578800439

# SageMath parsed files
*.sage.py

<<<<<<< HEAD
# Environments
.env
=======
# dotenv
.env

# virtualenv
>>>>>>> 90c1c0f68b4983c685e9d009482890e578800439
.venv
env/
venv/
ENV/
<<<<<<< HEAD
env.bak/
venv.bak/
=======
>>>>>>> 90c1c0f68b4983c685e9d009482890e578800439

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
<<<<<<< HEAD
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# PyCharm
.idea/

# Datasets
MNIST

# Lightning logs
lightning_logs
*.gz
*-batches-py
simclr.py
.DS_Store
.*_submit.py

source/api/
test-reports
tests/test-reports/
**/CIFAR10
**/MNIST
**/FashionMNIST
**/dac
**_binary
**MNIST
=======

# data
.data/
Datasets/
mnist/

# pl tests
ml-runs/
mlruns/
*.zip
*.ckpt
pytorch\ lightning
test-reports/
wandb
.forked/
>>>>>>> 90c1c0f68b4983c685e9d009482890e578800439
